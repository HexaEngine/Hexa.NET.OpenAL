// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;

namespace Hexa.NET.OpenAL
{
	public unsafe partial class OpenAL
	{
		internal static FunctionTable funcTable;

		/// <summary>
		/// Initializes the function table, automatically called. Do not call manually, only after <see cref="FreeApi"/>.
		/// </summary>
		public static void InitApi()
		{
			funcTable = new FunctionTable(LibraryLoader.LoadLibrary(GetLibraryName, null), 93);
			funcTable.Load(0, "alEnable");
			funcTable.Load(1, "alDisable");
			funcTable.Load(2, "alIsEnabled");
			funcTable.Load(3, "alDopplerFactor");
			funcTable.Load(4, "alDopplerVelocity");
			funcTable.Load(5, "alSpeedOfSound");
			funcTable.Load(6, "alDistanceModel");
			funcTable.Load(7, "alGetString");
			funcTable.Load(8, "alGetBooleanv");
			funcTable.Load(9, "alGetIntegerv");
			funcTable.Load(10, "alGetFloatv");
			funcTable.Load(11, "alGetDoublev");
			funcTable.Load(12, "alGetBoolean");
			funcTable.Load(13, "alGetInteger");
			funcTable.Load(14, "alGetFloat");
			funcTable.Load(15, "alGetDouble");
			funcTable.Load(16, "alGetError");
			funcTable.Load(17, "alIsExtensionPresent");
			funcTable.Load(18, "alGetProcAddress");
			funcTable.Load(19, "alGetEnumValue");
			funcTable.Load(20, "alListenerf");
			funcTable.Load(21, "alListener3f");
			funcTable.Load(22, "alListenerfv");
			funcTable.Load(23, "alListeneri");
			funcTable.Load(24, "alListener3i");
			funcTable.Load(25, "alListeneriv");
			funcTable.Load(26, "alGetListenerf");
			funcTable.Load(27, "alGetListener3f");
			funcTable.Load(28, "alGetListenerfv");
			funcTable.Load(29, "alGetListeneri");
			funcTable.Load(30, "alGetListener3i");
			funcTable.Load(31, "alGetListeneriv");
			funcTable.Load(32, "alGenSources");
			funcTable.Load(33, "alDeleteSources");
			funcTable.Load(34, "alIsSource");
			funcTable.Load(35, "alSourcef");
			funcTable.Load(36, "alSource3f");
			funcTable.Load(37, "alSourcefv");
			funcTable.Load(38, "alSourcei");
			funcTable.Load(39, "alSource3i");
			funcTable.Load(40, "alSourceiv");
			funcTable.Load(41, "alGetSourcef");
			funcTable.Load(42, "alGetSource3f");
			funcTable.Load(43, "alGetSourcefv");
			funcTable.Load(44, "alGetSourcei");
			funcTable.Load(45, "alGetSource3i");
			funcTable.Load(46, "alGetSourceiv");
			funcTable.Load(47, "alSourcePlay");
			funcTable.Load(48, "alSourceStop");
			funcTable.Load(49, "alSourceRewind");
			funcTable.Load(50, "alSourcePause");
			funcTable.Load(51, "alSourcePlayv");
			funcTable.Load(52, "alSourceStopv");
			funcTable.Load(53, "alSourceRewindv");
			funcTable.Load(54, "alSourcePausev");
			funcTable.Load(55, "alSourceQueueBuffers");
			funcTable.Load(56, "alSourceUnqueueBuffers");
			funcTable.Load(57, "alGenBuffers");
			funcTable.Load(58, "alDeleteBuffers");
			funcTable.Load(59, "alIsBuffer");
			funcTable.Load(60, "alBufferData");
			funcTable.Load(61, "alBufferf");
			funcTable.Load(62, "alBuffer3f");
			funcTable.Load(63, "alBufferfv");
			funcTable.Load(64, "alBufferi");
			funcTable.Load(65, "alBuffer3i");
			funcTable.Load(66, "alBufferiv");
			funcTable.Load(67, "alGetBufferf");
			funcTable.Load(68, "alGetBuffer3f");
			funcTable.Load(69, "alGetBufferfv");
			funcTable.Load(70, "alGetBufferi");
			funcTable.Load(71, "alGetBuffer3i");
			funcTable.Load(72, "alGetBufferiv");
			funcTable.Load(73, "alcCreateContext");
			funcTable.Load(74, "alcMakeContextCurrent");
			funcTable.Load(75, "alcProcessContext");
			funcTable.Load(76, "alcSuspendContext");
			funcTable.Load(77, "alcDestroyContext");
			funcTable.Load(78, "alcGetCurrentContext");
			funcTable.Load(79, "alcGetContextsDevice");
			funcTable.Load(80, "alcOpenDevice");
			funcTable.Load(81, "alcCloseDevice");
			funcTable.Load(82, "alcGetError");
			funcTable.Load(83, "alcIsExtensionPresent");
			funcTable.Load(84, "alcGetProcAddress");
			funcTable.Load(85, "alcGetEnumValue");
			funcTable.Load(86, "alcGetString");
			funcTable.Load(87, "alcGetIntegerv");
			funcTable.Load(88, "alcCaptureOpenDevice");
			funcTable.Load(89, "alcCaptureCloseDevice");
			funcTable.Load(90, "alcCaptureStart");
			funcTable.Load(91, "alcCaptureStop");
			funcTable.Load(92, "alcCaptureSamples");
		}

		public static void FreeApi()
		{
			funcTable.Free();
		}
	}
}
